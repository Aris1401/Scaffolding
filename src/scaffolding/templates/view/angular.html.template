<h1>Gestion des #{class_name_lower}s</h1>

<button (click)="onCreate()" class="btn btn-primary" >Ajout de #{class_name_lower}</button>

<table class="table table-responsive">
  <thead>
    <tr>
      #{for} #{a_fields}
      <th>#{a_fields:columnNamePascal}</th>
      #{endfor}

      #{for} #{foreign_keys}
      <td>
        #{foreign_keys:columnTypePascal}
      </td>
      #{endfor}
      <td></td>
      <td></td>
    </tr>
  </thead>
  <tbody>
    <tr *ngFor="let #{class_name_lower} of #{class_name_lower}s">
      #{for} #{a_fields}
      <td>{{ #{class_name_lower}.#{a_fields:columnName} }}</td>
      #{endfor}
      #{for} #{foreign_keys}
        <td>
          {{ #{class_name_lower}.#{foreign_keys:ColumnTypeProcessed} ? #{class_name_lower}.#{foreign_keys:ColumnTypeProcessed}.#{foreign_keys:foreignKeyFirstStringColumn} : "" }}
        </td>
      #{endfor}
      <td>
        <div class="d-flex gap-2">
            <button class="btn btn-primary" (click)="onEdit(#{class_name_lower})">Modifier</button>
            <button class="btn btn-danger" (click)="onDelete(#{class_name_lower})">Supprimer</button>
        </div>
      </td>
    </tr>
  </tbody>
</table>

<nav aria-label="Page navigation example" class="d-flex gap-2 align-items-center justify-content-end">
  <p>Total of elements: {{ totalOfElements }}</p>

  <ul class="pagination justify-content-end">
    <li class="page-item">
      <a class="page-link" [class.disabled]="isFirstPage" (click)="previousPage()" tabindex="-1" href="javascript:void(0);">Previous</a>
    </li>
    <li class="page-item" *ngFor="let i of generateRange()" ><a class="page-link" [class.active]="i == currentPage" (click)="switchPage(i + 1)" href="javascript:void(0);">{{ i + 1 }}</a></li>
    <li class="page-item">
      <a class="page-link" [class.disabled]="isLastPage" (click)="nextPage()" href="javascript:void(0);">Next</a>
    </li>
  </ul>
</nav>

<div [class.show-modal]="isCreateModalOpen" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
              <h2>Ajouter #{class_name_lower}</h2>
              <button class="btn btn-close" (click)="onCloseCreateModal()"></button>
            </div>

            <form (submit)="onSubmitCreate()">
            <div class="modal-body">
                #{for} #{a_fields}
                  <label for="#{a_fields:columnName}">#{a_fields:columnNamePascal}:</label>
                  <input class="form-control" type="#{a_fields:languageType}" id="#{a_fields:columnName}" name="#{a_fields:columnName}" [(ngModel)]="new#{class_name_camel}.#{a_fields:columnName}" required>
                  #{endfor}

                  #{for} #{foreign_keys}
                  <select class="form-control" name="#{foreign_keys:columnName}" [(ngModel)]="new#{class_name_camel}.#{foreign_keys:columnName}">
                    <option *ngFor="let #{foreign_keys:columnTypeProcessed} of #{foreign_keys:columnTypeProcessed}s" value="{{ #{foreign_keys:columnTypeProcessed}.#{foreign_keys:foreignKeyId} }}">{{ #{foreign_keys:columnTypeProcessed}.#{foreign_keys:foreignKeyFirstStringColumn} }}</option>
                  </select>
                  #{endfor}
            </div>

            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Ajouter</button>
            </div>
            </form>
          </div>
    </div>
</div>

<div [class.show-modal]="isEditModalOpen" class="modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
              <h2>Modifier #{class_name_lower}</h2>
              <button (click)="onCloseEditModal()" class="btn btn-close" ></button>
            </div>

            <form class="d-flex gap-2 flex-column" (submit)="onSubmitEdit()">
                <div class="modal-body">
                    #{for} #{a_fields}
                  <label for="#{a_fields:columnName}">#{a_fields:columnNamePascal}:</label>
                  <input class="form-control" type="#{a_fields:languageType}" id="#{a_fields:columnName}" name="#{a_fields:columnName}" [(ngModel)]="edited#{class_name_camel}.#{a_fields:columnName}" required>
                  #{endfor}
                  #{for} #{foreign_keys}
                    <select class="form-control" name="#{foreign_keys:columnName}" [(ngModel)]="edited#{class_name_camel}.#{foreign_keys:columnName}">
                      <option *ngFor="let #{foreign_keys:columnTypeProcessed} of #{foreign_keys:columnTypeProcessed}s" value="{{ #{foreign_keys:columnTypeProcessed}.#{foreign_keys:foreignKeyId} }}">{{ #{foreign_keys:columnTypeProcessed}.#{foreign_keys:foreignKeyFirstStringColumn} }}</option>
                    </select>
                  #{endfor}
                </div>

                <div class="form-footer">
                    <button class="btn btn-primary" type="submit">Modifier</button>
                </div>
            </form>
          </div>
    </div>
</div>
